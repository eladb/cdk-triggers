// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`minimal usage 1`] = `
Object {
  "Parameters": Object {
    "AssetParameters3c9152cc6494b29fcb0e07db4f664cbe2552770efaecad038ac10c5e83436352ArtifactHash32E1B19A": Object {
      "Description": "Artifact hash for asset \\"3c9152cc6494b29fcb0e07db4f664cbe2552770efaecad038ac10c5e83436352\\"",
      "Type": "String",
    },
    "AssetParameters3c9152cc6494b29fcb0e07db4f664cbe2552770efaecad038ac10c5e83436352S3BucketF699E8DE": Object {
      "Description": "S3 bucket for asset \\"3c9152cc6494b29fcb0e07db4f664cbe2552770efaecad038ac10c5e83436352\\"",
      "Type": "String",
    },
    "AssetParameters3c9152cc6494b29fcb0e07db4f664cbe2552770efaecad038ac10c5e83436352S3VersionKey7DE82419": Object {
      "Description": "S3 key for asset version \\"3c9152cc6494b29fcb0e07db4f664cbe2552770efaecad038ac10c5e83436352\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "AWSCDKTriggerCustomResourceProviderCustomResourceProviderHandler97BECD91": Object {
      "DependsOn": Array [
        "AWSCDKTriggerCustomResourceProviderCustomResourceProviderRoleE18FAF0A",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters3c9152cc6494b29fcb0e07db4f664cbe2552770efaecad038ac10c5e83436352S3BucketF699E8DE",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters3c9152cc6494b29fcb0e07db4f664cbe2552770efaecad038ac10c5e83436352S3VersionKey7DE82419",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters3c9152cc6494b29fcb0e07db4f664cbe2552770efaecad038ac10c5e83436352S3VersionKey7DE82419",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "AWSCDKTriggerCustomResourceProviderCustomResourceProviderRoleE18FAF0A",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AWSCDKTriggerCustomResourceProviderCustomResourceProviderRoleE18FAF0A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "lambda:InvokeFunction",
                  ],
                  "Effect": "Allow",
                  "Resource": Array [
                    "*",
                  ],
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "MyTopic86869434": Object {
      "Type": "AWS::SNS::Topic",
    },
    "MyTriggerB6CCCACE": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "MyTopic86869434",
      ],
      "Properties": Object {
        "HandlerArn": Object {
          "Fn::GetAtt": Array [
            "MyTriggerHandlerD6B1FF23",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWSCDKTriggerCustomResourceProviderCustomResourceProviderHandler97BECD91",
            "Arn",
          ],
        },
      },
      "Type": "Custom::Trigger",
      "UpdateReplacePolicy": "Delete",
    },
    "MyTriggerHandlerD6B1FF23": Object {
      "DependsOn": Array [
        "MyTriggerHandlerServiceRoleFC0CFFAB",
      ],
      "Properties": Object {
        "Code": Object {
          "ZipFile": "foobar",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "MyTriggerHandlerServiceRoleFC0CFFAB",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "MyTriggerHandlerServiceRoleFC0CFFAB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;
